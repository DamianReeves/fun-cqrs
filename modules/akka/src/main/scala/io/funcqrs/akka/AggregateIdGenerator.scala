package io.funcqrs.akka

import io.funcqrs._

// TODO: find decent name for this ( lucd: not needed any more :-) )
//trait AggregateIdGenerator {
//  self: AggregateManager =>
//}

trait AssignedAggregateId {
  self: AggregateManager =>

  val idStrategy = new AssignedIdStrategy[Aggregate]
}

trait AutoGeneratedAggregateId {
  autoGen: AggregateManager =>

  def generateId(): Id

  val idStrategy = new AutoGeneratedIdStrategy[Aggregate] {
    def generateId(): Id = autoGen.generateId()
  }
}

/** Provides means to manage a Singleton Aggregate.
  * A Singleton Aggregate has a fixed Id and therefore there must exist only one instance in the whole system.
  */
trait SingletonAggregateId {
  singleton: AggregateManager =>

  val id: Id

  val idStrategy = new SingletonIdStrategy[Aggregate] {
    val id: Id = singleton.id
  }
}

